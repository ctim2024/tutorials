git command

git commit --amend          # modify the last commit message
git config --global user.email "belgecemjrad2018@gmail.com"
git config --global user.name "boubaker"
git status                 #get status
git add <filename>         #add files to stage area
git restore --staged .     #unstage files
git commit -m "this is the first commit this copy is running on server ubuntu"                  #add to local repository
git branch                 #get branches (main)
git remote -v              #get remote repository (origin)
git pull origin main      
ssh-keygen -t rsa -b 4096 -C "belgecemjrad2018@gmail.com"           #create key
cat /home/ctim/.ssh/id_rsa.pub                                      #read file and copy key to past in github



git ls-files -s          # list of changes in staging area
git status -s
git cat-file -p 1585
git log                 # show commits 
git diff           #diff working dir and stage
git diff --staged   #diff between stage and repo
git config --global core.editor "vim"    #editor by default
git log --oneline file.txt
git show <commit key> 
git reset --hard HEAD~1    #roll back to before last commit and change working directory with this commit
git reflog                 #show all commits include deleted commits
git reset --HEAD@{1}       #go to this commit 
git show HEAD

#branch

git branch testing         #new branch create
git switch testing         #change branch and all next commits will be in this branch
git merge testing          #be on the master branch and execute this command to merge testing branch on master
git branch --merged        #show meged branches
git branch -d testing      #delete branch (safe delete) if branch not merged it will not be deleted
git branch -D testing      #force deleting
git checkout testing       #switch branch
git checkout -d testing    #create branch and switch to this branch
git branch -m testingren   #rename branch


# remote repository commands

git remote          # get remote repo names  (origin = remote repository)
git remote -v       # get action can do on remote repo like push fetch
git status          # show diff between remote and local
git branch -r       # show branches in remote repo
git fetch origin    # show new commits added to remote repo to show diff with local  after this command execute command "git status" to show status of your local repo accross remote
git status          # to show status after git fetch
git merge           # to merge remote branch or remote repo to local branch or repo this is execute after git fetch
alias graph="git log --oneline --all --graph --decorate"     # this is alias to use graph instead this long command
git push -u origin feature   # this command will create branch feature in remote repo and then push commits from local branch feature to remote branch feature
git pull origin       # git pull = git fetch + get merge
git branch -vv        # correspond branches between local and remote
git log -10           # 10 commits only






88888888888888888888888888888888888888888888888888
