step 1 : install Vagrant : - apt install vagrant
                           - vagrant --version
step 2 : select VM Provider. Vagrant has direct support for VirtualBox, Hyper-V, Docker
step 3 : Create new folder for Vagrant project
step 4 : On terminal or command line navigate to the folder and initiate vagrant project : - vagrant init (this will create a new Vagrantfile in the folder. Vagrantfile is a configuration file that defines the settings for your virtual machine
step 5 : Choose a box to use : https://app.vagrantup.com/boxes/search (A box is a pre-configured vm image that you can use as starting point for your vm)
step 6 : Add configuration of the box in vagrantfile (for exemple, you could use the 'ubuntu/bionic64' box by adding the following line to your Vagrantfile : config.vm.box="ubuntu/bionic64"  , we can also directly add configuration for the vm using the following command : - vagrant init centos/7 (if vagrantfile does not already exists)

- vagrant box add centos/7 (will add box to vagrant, but will not create Vagrant file))

step 7 : Start vm using command : - vagrant up (this will create a new vm using the box you selected, the first time , vagrant will download the box from internet

step 8 : SSH into the vm : - vagrant ssh

                           - /home/boubaker/.vagrant.d/boxes  : the home of boxes in your host    
          


Provision the vm : 
   Provisionning a virtual machine means process of setting up and configuring a vm with necessary software and resources needed for a particular task or application
   Provisionning can be done by logging into the vm and making the necessary changes or it can be automated using configuration management tools like Ansible, Chef, or Puppet.
   Automated provisionning can save time and ensure consistency across multiple vms or environments.
   Vagrant allows for easy provisioning of vms using configuration files called "Vagrantfiles" which specify the desired state of the vm.
                         
