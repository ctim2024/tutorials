# linux startup pipeline

power on -> BIOS -> MBR -> BOOT LOADER (GRUB) -> Kernel (Linux OS) -> Initial RAM disk-initramfs image -> /sbin/init(parent process) ->


/sbin/init => /lib/systemd/systemd

$ sudo systemctl start|stop|restart httpd.service

Enabling or disabling a system service from starting up at system boot :

$ sudo systemctl enable|disable httpd.service


# Filesystem supported by Linux :

  -> Conventional disk filesystems : ext3, ext4, XFS, Btrfs, JFS, NTFS, vfat, etc..
  -> Flash storage filesystems : ubifs, jffs2, yaffs, etc..
  -> Database filesystems
  -> Special purpose filesystems : procfs, sysfs, tmpfs, squashfs, debugfs, etc..

# Compare Windows and Linux :
                                    Windows           Linux
Partition                           Disk1            /dev/sda1
Filesystem Type                     NTFS/VFAT        EXT3/EXT4/XFS/BTRFS..
Mounting Parameters                 DriveLetter      MountPoint
Base Folder (where OS is stored)    C:\              /

# Partions in the Linux Hard Disk : 

   -> Linux Hard Disk : sda
   -> / : sda1
   -> home : sda2
   -> var : sda3
   -> swap : sda4

# show details about my filesystem :

 -> df -Th /

# swap file

 -> cat /proc/swaps





# command in terminal description
   -> ls -a /home/belgecem      : ls : command   -a : option   /home/belgecem : arguments
   
   
# directory 

  -> pwd                           : displays the present working directory
  -> cd ~ or cd                    : change to your home directory
  -> cd ..                         : change to parent directory
  -> cd -                          : change to previous directory
  -> pushd /tmp                    : change to /tmp and push the directory in list of browsed directory
  -> popd                          : remove last directory from list of browsed directory
  -> dirs                          : show list of browse directory
  -> cd /                          : go to root
  -> ls                            : list content of actual directory
  -> ls -l                         : list files with details
  -> ls -a                         : //         //         //       //  and all directories and hidden files 
  -> ls -l *fil*                   : display list of files with name containes fil
  -> tree                          : display a tree view of filesystem    
  -> tree -d /                     : tree of directories in /  
  -> mkdir dir1 dir2               : create new directory
  -> rmdir dir*                    : delete empty directories begining with dir
  -> rm -rf dir2                   : delete not empty directory


# manage files 
  
  -> echo > file1.txt              : create empty file
  -> touch file2                   : create empty file
  -> wc file1.txt                  : display number of lines of file
  -> cat                           : display the content of file
  -> cat -n                        : //    //     //         // with line number 
  -> less file1.txt                : navigate file by screen
  -> less -N file1.txt             : //   //     //        // with line number
  -> head file1.txt                : display first 10 lines of file
  -> head -20 file1.txt            : display first 20 lines in the file
  -> tail file1.txt                : display the last 10 lines
  -> tail -20 file1.txt            : display last 20 lines
  -> tac file 1.txt                : display the file backwards (reversed)
  -> mv file1 file2                : rename file1 to file2
  -> rm file2                      : remove file2   
  -> rm -i file1                   : confirm before deleting
  -> ls -lR dir*                   : list of files in subdirectories begining with dir

# search files

  -> find . -name "file1*" -ls     : find files beging by file1
  -> locate file1                  : find all file in system or directory with file1 
  -> sudo updatedb                 : this command to update list of files and directories : this list is iterate by locate command
  # wild card
    -> ?                           : matches any single charachter
    -> *                           : matches any string of characters
    -> [set]                       : matches any character in the set of characters, for example [adf] will match any occurrence of a, d or f
    -> [!set]                      : matches any character not in the set of charachters 
  -> find -name "f*" -exec rm {} ";"          : this command find files or directory begins with f and execute rm command on this research {} replace founded files
  -> find .                                   : find all files in a directory only files without directories
  -> find . -type d                           : find all directories only directories without files  
  -> find . -type d -maxdepth 1               : display only directories not subdirectories
  -> find . -size 0                           : find files with size 0
  -> find . -size 0 -ls                       : //  //      //      // with details
  -> find . -newer boot.log                   : list all files created after file boot.log
  
  
# manage packages (install remove get)

 softwares in linux managed as packages : package contains all software files and dependencies
 
  -> dpkg --list | less             : list all installed packages by screen
  -> dpkg --list | grep apache      : list all packages and select apache name from list
  -> dpkg --listfiles bzip2 | less  : list of all files in the package bzip2
  -> sudo dpkg --remove bzip2       : remove package
  -> sudo apt-cache search wget2    : search in apt repository if wget2 package exist to then install it
  -> sudo apt-get install wget2-dev : install wget2
  -> sudo apt-get remove wget2      : remove package wget2  
  -> sudo apt-get install "vmware*"   : to install all packages related to vmware 


# documentation

  -> man ls                         : give me documentation of ls command
  -> man -f ls                      : give short description like whatis ls
  -> man 7 ls                       : give section 7 if exist 
  -> man -a ls                      : give all documentation 
  -> man -k ls                      : give all documentation contains ls
  -> apropos ls                     : //      //     //     //     //  //
  -> info ls                        : also give documentation if i want to search specific work i typ / then i put my word
  -> ls --help                      : also gives fast help


# processes 

      Process Type                       Description                                                                                   Example  
	  
	  Interactive Processes              Need to be started by a user, either at a command line or through a GUI                       bash, firefox, top  
      Batch Processes                    Automatic processes which are scheduled from and then disconnected from the terminal          updatedb, idconfig
	  Daemons                            Server processes that run continuously                                                        httpd, sshd, libvirtd
	  Threads                            Lightweight processes. These are tasks that run under the umbrella of a main process,         firefox, gnome-terminal-server  
	                                     sharing memory and other resources.
	  Kernel Threads                     Kernel tasks that users neither start nor terminate and have little control over              kthreadd, migration, ksoftirqd
	  
	  
	= All running processes will be in a queue managed by kernel   
    = PID   : process id
    = PPID  : parent process id
    = TID   : thread id if process has many threads otherwise thread will have pid id
	
	-> kill -SIGKILL <pid>              : kill a process or terminate
	-> kill -9 <pid>                    : //     //    //    //    //
    	
    = a user can start many processes the system identify the user by the real user ID or the ruid assigned to the user 	  
	= RUID  : identifies the user who started the process
    = EUID  : determines the access rights of the user
    = RGID  : identifies the group that started the process
    = EGID  : determines the access rights of the group	
  => usually we talk only about UID and GUI
    
    * Priority : 	
    = the process can run limit number of tasks per time, for that we assign a priority to process called nice value or niceness 
    = process with low niceness is executed before another with high niceness
    = process with niceness = -20 is the highest priority and niceness = 19 is the lowest

    -> ps                                : display processes launched underneath this particular terminal window (this command show : bash and ps)
	-> ps -f                             : ps command with more details
	-> ps -l                             : also more details like priority
	-> ps lf                             : process with priority
	-> ps -elf | less                    : display all process running on the system in full details
	    = CMD betwen [] that's mean these program are running inside kernel not started by user
	-> ps aux | head -10                 :  //        //          //        //       //             //
	-> ps axo stat,priority,pid,pcpu,comm | head -10   : all process and only these properties
	-> renice +5 3077                    : change priority to +5 for the pid 3077 
	-> sudo renice -5 3077               : decrease priority
	-> gnome-system-monitor              : to start task manager window if i want to manage process graphically
    -> w or top or uptime                : show average load (average load are process that wait to be executed it can be wait the processor to be available or in sleep mode ) 
	     -- load average: 0.69, 0.76, 0.94    : Load average of 0.69 over the last 1 minute
                                                Load  average of 0.76 over the last 5 minutes
                                                Load average of 0.94 over the last 15 minutes
		= The load average is a measure of how many processes are waiting in the system's run queue to access the processor(s). In other words, it indicates the level of demand on the system.

			If the load average is close to 0, it means the system is likely idle.
			If the load average is close to the number of available processors (cores), it suggests that the system is fully utilized.
			If the load average is significantly higher than the number of processors, it indicates that processes are waiting in the queue, and the system might be experiencing some level of congestion or overload.										
															
	
	
	-> treeps                             : display processes as tree
	-> sleep $time                        : sleep for a moment in seconds by default or we add d for days
	
	
# cron

  = cron is a scheduling job 
  
    -> sudo cat /etc/crontab                : list all cron  

#  which docker (/usr/bin/docker)   : where exist 



# Filesystem

    -> sudo mount /dev/sda5   /home                 : mount filesytem of partion sda5 to filesystem in directory /home     /home : mount point
    -> sudo umount /home                            : unmount filesystem 	mounted in /home
	-> mount | less -10                             : display mounted filesystems
	-> df -hT                                       : // //    //      //      //
	
  = /home : is user directory	
    /bin  : contain binary files and executable programs contains  user commands like ls man .... and necessary programs for boot
	/sbin : likewise /bin it contains essential binaries related to system administation (administation commands like fssk , IP ..)
	/usr  : user programs 
	    /bin  : contains user programs
		/sbin : contains system programs
	/proc : process information this is a filesystem that contains virtuals directories and files that exists only in memory and presents informations about the system.
	    /102    : this directory contains for example information about PID 102
	/dev  : contains device nodes a type of pseudo file used by most hardware and software devices	except for network devices
        /sda1   : first partition in the first hard disk
        /lp1    : second printer
        /random : a source of random numbers
    /var  : containes files that are expected to change in size and content as system is running
        /log   : system log files
        /spool : print queues
        /lib   : database files		
		/tmp   : temporary files
	/etc  : is the home for system configuration files it contains no binary programs although there some executable scripts. For user file configuration they are in their home directory 
	/boot : contains few essential files needed to boot the system 
	/lib  : contains libraries for essential programs almost of them is known as  dynamically loaded libraries, and known as shared libraries or shared objects
	/lib64 : likewise /lib but contain 64 bit libraries  
	/run   : an amovible disk like usb cdrom etc.. must be mounted to the filesystem to be used. By default the disk is detect automatically. In past the mount point was /media but now is /run
	    example : /run/media/ctim/myusb  : this is the mount point of usb with name myusb and system user ctim
	/mnt   : is used since early days of unix for temporarily mounting filesystem, these can be those on removable media but they might be network filesystems witch are not normally mounted or these can    
             be temporary partitions or so-called loopback filesystem witch are files witch pretend to be partitions	
	
	
	
# Compare 

     -> diff [option] file1.txt file2.txt                  : compare two files
     -> 	 