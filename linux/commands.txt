# linux startup pipeline

power on -> BIOS -> MBR -> BOOT LOADER (GRUB) -> Kernel (Linux OS) -> Initial RAM disk-initramfs image -> /sbin/init(parent process) ->


/sbin/init => /lib/systemd/systemd



$ sudo systemctl start|stop|restart httpd.service

Enabling or disabling a system service from starting up at system boot :

$ sudo systemctl enable|disable httpd.service



# system

  -> cd /lib/systemd/system && ls -l runlevel*target            : show target runlevel
  -> sudo systemctl set-default multi-user.target               : set default target
  -> sudo rm '/etc/systemd/system/default.target'               : delete default target
  -> systemctl isolate graphical.target                         : change runlevel
  -> systemctl isolate reboot.target                            : //   //     //
  -> reboot                                       
  -> shutdown -r now                                            : reboot now
  -> systemctl isolate poweroff.target                          : shutdown
  -> poweroff                                                   : //    //
  
  # log system 
     = /etc/rsyslog.conf                                        : The main configuration file for rsyslog
     = $IncludeConfig /etc/rsyslog.d/*.conf                     : add this line in /etc/rsyslog.conf to get configuration from any directory in rsyslog.d
     = mail.info              -/var/log/mail.info               : example of rules in rsyslog.conf (facilities.severity)
       mail.warn             -/var/log/mail.warn
       mail.err              /var/log/mail.err
     = auth,authpriv.*       /var/log/auth.log                  : 
       *.*;auth.none,authpriv.none      -/var/log/syslog        : writes all messages except ones originating from the auth and authpriv facilities to /var/log/syslog

     -> logger -p mail.info -t mailtest "Testing 123."          : logger a message 
     -> sudo tail -1 /var/log/mail.log                          : after logger a message we acceded the message in file mail.log	 
     -> cat /etc/logrotate.d/rsyslog                            : display the rotate of all files related to rsyslog
     -> cat /etc/logrotate.conf                                 : lograte file configuration 
	 -> logrotate -fv /etc/logrotate.conf                       : execute this command if i change anything in logrotate.conf and i want to test, The -f option tells logrotate to force a rotation while the -v option enables
                                                                  verbose logging.
   # disk management
     -> fdisk -l                                                : list of partitions in your system
     -> fdisk /dev/sdb                                          : this command to partition disk /dev/sdb
        -> m                                                    : enter m to get help
        -> n                                                    : ceate MBR disk
        -> g                                                    : create GPT disk
        -> w                                                    : to write changes in disk		
	 
	 
# Filesystem supported by Linux :

  -> Conventional disk filesystems : ext3, ext4, XFS, Btrfs, JFS, NTFS, vfat, etc..
  -> Flash storage filesystems : ubifs, jffs2, yaffs, etc..
  -> Database filesystems
  -> Special purpose filesystems : procfs, sysfs, tmpfs, squashfs, debugfs, etc..

# Compare Windows and Linux :
                                    Windows           Linux
Partition                           Disk1            /dev/sda1
Filesystem Type                     NTFS/VFAT        EXT3/EXT4/XFS/BTRFS..
Mounting Parameters                 DriveLetter      MountPoint
Base Folder (where OS is stored)    C:\              /

# Partions in the Linux Hard Disk : 

   -> Linux Hard Disk : sda
   -> / : sda1
   -> home : sda2
   -> var : sda3
   -> swap : sda4

# show details about my filesystem :

 -> df -Th /

# swap file

 -> cat /proc/swaps





# command in terminal description
   -> ls -a /home/belgecem      : ls : command   -a : option   /home/belgecem : arguments
   
   
# directory 

  -> pwd                           : displays the present working directory
  -> cd ~ or cd                    : change to your home directory
  -> cd ..                         : change to parent directory
  -> cd -                          : change to previous directory
  -> pushd /tmp                    : change to /tmp and push the directory in list of browsed directory
  -> popd                          : remove last directory from list of browsed directory
  -> dirs                          : show list of browse directory
  -> cd /                          : go to root
  -> ls                            : list content of actual directory
  -> ls -l                         : list files with details
  -> ls -a                         : //         //         //       //  and all directories and hidden files 
  -> ls -l *fil*                   : display list of files with name containes fil
  -> tree                          : display a tree view of filesystem    
  -> tree -d /                     : tree of directories in /  
  -> mkdir dir1 dir2               : create new directory
  -> rmdir dir*                    : delete empty directories begining with dir
  -> rm -rf dir2                   : delete not empty directory


# manage files 
  
  -> echo > file1.txt              : create empty file
  -> touch file2                   : create empty file
  -> wc file1.txt                  : display number of lines of file
  -> cat                           : display the content of file
  -> cat -n                        : //    //     //         // with line number 
  -> less file1.txt                : navigate file by screen
  -> less -N file1.txt             : //   //     //        // with line number
  -> head file1.txt                : display first 10 lines of file
  -> head -20 file1.txt            : display first 20 lines in the file
  -> tail file1.txt                : display the last 10 lines
  -> tail -20 file1.txt            : display last 20 lines
  -> tac file 1.txt                : display the file backwards (reversed)
  -> mv file1 file2                : rename file1 to file2
  -> rm file2                      : remove file2   
  -> rm -i file1                   : confirm before deleting
  -> ls -lR dir*                   : list of files in subdirectories begining with dir

# search files

  -> find . -name "file1*" -ls     : find files beging by file1
  -> locate file1                  : find all file in system or directory with file1 
  -> sudo updatedb                 : this command to update list of files and directories : this list is iterate by locate command
  # wild card
    -> ?                           : matches any single charachter
    -> *                           : matches any string of characters
    -> [set]                       : matches any character in the set of characters, for example [adf] will match any occurrence of a, d or f
    -> [!set]                      : matches any character not in the set of charachters 
  -> find -name "f*" -exec rm {} ";"          : this command find files or directory begins with f and execute rm command on this research {} replace founded files
  -> find .                                   : find all files in a directory only files without directories
  -> find . -type d                           : find all directories only directories without files  
  -> find . -type d -maxdepth 1               : display only directories not subdirectories
  -> find . -size 0                           : find files with size 0
  -> find . -size 0 -ls                       : //  //      //      // with details
  -> find . -newer boot.log                   : list all files created after file boot.log
  
  
# manage packages (install remove get)

 softwares in linux managed as packages : package contains all software files and dependencies
 
  -> dpkg --list | less             : list all installed packages by screen
  -> dpkg --list | grep apache      : list all packages and select apache name from list
  -> dpkg --listfiles bzip2 | less  : list of all files in the package bzip2
  -> sudo dpkg --remove bzip2       : remove package
  -> sudo apt-cache search wget2    : search in apt repository if wget2 package exist to then install it
  -> sudo apt-get install wget2-dev : install wget2
  -> sudo apt-get remove wget2      : remove package wget2  
  -> sudo apt-get install "vmware*"   : to install all packages related to vmware 


# documentation

  -> man ls                         : give me documentation of ls command
  -> man -f ls                      : give short description like whatis ls
  -> man 7 ls                       : give section 7 if exist 
  -> man -a ls                      : give all documentation 
  -> man -k ls                      : give all documentation contains ls
  -> apropos ls                     : //      //     //     //     //  //
  -> info ls                        : also give documentation if i want to search specific work i typ / then i put my word
  -> ls --help                      : also gives fast help


# processes 

      Process Type                       Description                                                                                   Example  
	  
	  Interactive Processes              Need to be started by a user, either at a command line or through a GUI                       bash, firefox, top  
      Batch Processes                    Automatic processes which are scheduled from and then disconnected from the terminal          updatedb, idconfig
	  Daemons                            Server processes that run continuously                                                        httpd, sshd, libvirtd
	  Threads                            Lightweight processes. These are tasks that run under the umbrella of a main process,         firefox, gnome-terminal-server  
	                                     sharing memory and other resources.
	  Kernel Threads                     Kernel tasks that users neither start nor terminate and have little control over              kthreadd, migration, ksoftirqd
	  
	  
	= All running processes will be in a queue managed by kernel   
    = PID   : process id
    = PPID  : parent process id
    = TID   : thread id if process has many threads otherwise thread will have pid id
	
	-> kill -SIGKILL <pid>              : kill a process or terminate
	-> kill -9 <pid>                    : //     //    //    //    //
    	
    = a user can start many processes the system identify the user by the real user ID or the ruid assigned to the user 	  
	= RUID  : identifies the user who started the process
    = EUID  : determines the access rights of the user
    = RGID  : identifies the group that started the process
    = EGID  : determines the access rights of the group	
  => usually we talk only about UID and GUI
    
    * Priority : 	
    = the process can run limit number of tasks per time, for that we assign a priority to process called nice value or niceness 
    = process with low niceness is executed before another with high niceness
    = process with niceness = -20 is the highest priority and niceness = 19 is the lowest

    -> ps                                : display processes launched underneath this particular terminal window (this command show : bash and ps)
	-> ps -f                             : ps command with more details
	-> ps -l                             : also more details like priority
	-> ps lf                             : process with priority
	-> ps -elf | less                    : display all process running on the system in full details
	    = CMD betwen [] that's mean these program are running inside kernel not started by user
	-> ps aux | head -10                 :  //        //          //        //       //             //
	-> ps axo stat,priority,pid,pcpu,comm | head -10   : all process and only these properties
	-> renice +5 3077                    : change priority to +5 for the pid 3077 
	-> sudo renice -5 3077               : decrease priority
	-> gnome-system-monitor              : to start task manager window if i want to manage process graphically
    -> w or top or uptime                : show average load (average load are process that wait to be executed it can be wait the processor to be available or in sleep mode ) 
	     -- load average: 0.69, 0.76, 0.94    : Load average of 0.69 over the last 1 minute
                                                Load  average of 0.76 over the last 5 minutes
                                                Load average of 0.94 over the last 15 minutes
		= The load average is a measure of how many processes are waiting in the system's run queue to access the processor(s). In other words, it indicates the level of demand on the system.

			If the load average is close to 0, it means the system is likely idle.
			If the load average is close to the number of available processors (cores), it suggests that the system is fully utilized.
			If the load average is significantly higher than the number of processors, it indicates that processes are waiting in the queue, and the system might be experiencing some level of congestion or overload.										
															
	
	
	-> treeps                             : display processes as tree
	-> sleep $time                        : sleep for a moment in seconds by default or we add d for days
	
	
# cron

  = cron is a scheduling job 
  
    -> sudo cat /etc/crontab                : list all cron  

#  which docker (/usr/bin/docker)   : where exist 



# Filesystem

    -> sudo mount /dev/sda5   /home                 : mount filesytem of partion sda5 to filesystem in directory /home     /home : mount point
    -> sudo umount /home                            : unmount filesystem 	mounted in /home
	-> mount | less -10                             : display mounted filesystems
	-> df -hT                                       : // //    //      //      //
	
  = /home : is user directory	
    /bin  : contain binary files and executable programs contains  user commands like ls man .... and necessary programs for boot
	/sbin : likewise /bin it contains essential binaries related to system administation (administation commands like fssk , IP ..)
	/usr  : user programs 
	    /bin  : contains user programs
		/sbin : contains system programs
	/proc : process information this is a filesystem that contains virtuals directories and files that exists only in memory and presents informations about the system.
	    /102    : this directory contains for example information about PID 102
	/dev  : contains device nodes a type of pseudo file used by most hardware and software devices	except for network devices
        /sda1   : first partition in the first hard disk
        /lp1    : second printer
        /random : a source of random numbers
    /var  : containes files that are expected to change in size and content as system is running
        /log   : system log files
        /spool : print queues
        /lib   : database files		
		/tmp   : temporary files
	/etc  : is the home for system configuration files it contains no binary programs although there some executable scripts. For user file configuration they are in their home directory 
	/boot : contains few essential files needed to boot the system 
	/lib  : contains libraries for essential programs almost of them is known as  dynamically loaded libraries, and known as shared libraries or shared objects
	/lib64 : likewise /lib but contain 64 bit libraries  
	/run   : an amovible disk like usb cdrom etc.. must be mounted to the filesystem to be used. By default the disk is detect automatically. In past the mount point was /media but now is /run
	    example : /run/media/ctim/myusb  : this is the mount point of usb with name myusb and system user ctim
	/mnt   : is used since early days of unix for temporarily mounting filesystem, these can be those on removable media but they might be network filesystems witch are not normally mounted or these can    
             be temporary partitions or so-called loopback filesystem witch are files witch pretend to be partitions	
	
	
	
# Compare 

     -> diff [option] file1.txt file2.txt                  : compare two files
     -> diff3 file1.txt  common_file.txt file2.txt         : compare three files accross the common file
     -> file *                                             : show the type of files in a directory
            remarq : linux don't recognize the type of file by its extension like windows but by its content.
	 -> rsync sourcefile  destinationfile                  : copy source to destination (rsync can be used to copy from local to remote server)
     -> rsync --progress -avrxH --delete sourcedir destdir : copy all sourcedir to destdir and display progress and few details about copy	 
			
			
			
# text editors

     -> vimtutor	                                       : get help of vi	

# user environement


     -> whoami                                             : get the current user
     -> who                                                : get current log on users	 
	 
	 = in startup these profile files or settings to customize user environement like login.com in vms are readed in order :
                 1- ~/.bash_profile
                 2- ~/.bash_login
                 3- ~/.profile				 
				 = shell will execute the first founded file if it found .bash_profile it will ignore bash_login and profile 
				 = one of this file is only executed in the startup of the system. when we start new terminal bashrc file will be executed.

# aliases 

     = most of aliases are placed in bashrc file	
     -> alias                                              : display all aliases	

# users and groups

     = every user has a unique user id UID. normal user start with a uid of 1000 or greater.
     = linux uses groups for organizing users . Group is collection of accounts that shared certain permissions.
     = the control of group membership is administrated through /etc/group file witch contain a list of groups with their members.
     = by default every user belongs to default or primary group. When a user logs in the group membership is set for their primary group 
	   and all the members enjoy the same level of access and privilege permissions on various files and directories can be modified at the 
	   group level.
	 = users have one or more group ID GID  including a default one witch is the same as the UID. Thes numbers are associated with names 
       through the files /etc/passwd	and /etc/group 
	 = groups are used to establish a set of users who have common interests for the purpose of x success rights privileges and security considerations.
     = access rights to files and devices are granted on the basis of the user and the group they belong to.	 
	 = only root user can remove user or group  
	 
	 = manage user
	 
	 -> sudo useradd boubaker                                       	 : add new user , this will create a home directory for this user and add aline in /etc/passwd like this : boubaker:x:1001:1001::/home/boubaker:/bin/sh
     -> sudo userdel boubaker                                            : delete a user however will leave home directory intact.
	 -> sudo userdel -r boubaker                                         : delete user account and its home directory
	 -> id                                                               : display information about the current user
	 -> id 1001                                                          : //   //      //        //  UID 1001
	 -> less /etc/default/useradd                                        : contains default for useradd like shell SHELL=/bin/sh  by default when we add new user its shell will be /bin/sh

	 -> sudo useradd -m -c "belgecem belkeri" -s /bin/bash bekeri        : add new user -m to ensure the creation of home directory   bekeri : the name of account 
	 -> sudo passwd bekeri                                               : add password to user bekeri
	 -> grep bekeri /etc/passwd /etc/group                               : to verify entry is added in /etc/passwd also in /etc/group
     -> ssh bekeri@localhost                                             : connect to new account through ssh
	 -> ls -la  /etc/skel                                                : list of files that will be added to every new user by default
	 
	 = manage group
	 
	 -> sudo /usr/sbin/groupadd   anewgroup                              : creating a new group
	 -> sudo /usr/sbin/groupdel   anewgroup                              : delete a group
	 -> groups ctim                                                      : list of groups belongs to ctim user
	 -> sudo /usr/sbin/usermod -a -G anewgroup ctim                      : add user ctim to group anewgroup   -a : append 
	 -> sudo usermod -G $(id -nG ctim | sed 's/anewgroup//g' | xargs) ctim      : remove user 'ctim' from group 'anewgroup'
	 = usermod can be used to modify group id or group name
	 
# environement variables 

     -> env | less -10                                                   : list of environement variables
     -> export                                                           : //   ///                //
	 -> export PATH=$HOME/bin:$PATH                                      : add entry to PATH
 	 -> OLDPS1=$PS1                                                      : assign $PS1 env var to new env var OLDPS1
     -> echo $PS1                                                        : PS1 is env var that contains the looks like of your prompt shell
     	= thes special charachters can be included in PS1
		\u : User name
        \h : Host name
        \w : current working directory
        \! : History number of this command
        \d : Date	

# previous commands
     -> history | tail -20	                                       : list of 20 last typed commands	
	 
	 = $HISTFILE      : the location of history file this file contains the historic of commands typed
     = $HISTFILESIZE  : the size of HISTFILE by default 500
	 = $HISTCONTROL   : how commands are stored
	 = $HISTIGNORE    : which command lines can be unsaved
	 
	 -> set | grep HIST                                             : get list of HIST variables

# file permissions
   
     -> ls -l somefile             : display permissions file   
     -> chmod uo+x,g-w somefile    : add execute to uo (user or owner and others or world) and remove write from group (g)
	 -> chmod 755 somefile         : change permission of file like this = rwxr-xr-x
	 -> sudo chown root file1      : change file's owner to root
	 -> chgrp root file3           : change file's group to root     : > -rw-rw-r-- 1 ctim root  0 Dec  8 09:42 file3



# manipulating text

	 -> cat filename                                                       : to view file content    
     -> tac file1 file2 > newfile                                          : create file with content of file2 before content of file1
     -> cat << EOF > file3                                                 : create new file file3 and write in it from prompt in the end we put EOF
     -> less somefile                                                      : read big file by screen
     -> cat somefile | less                                                : //     //     //      //     
	 -> head -n 5 file1                                                    : read the first five lines
	 -> head -5  file1                                                     : //    //    ///      //
	 -> tail -n 5 file1                                                    : read the last five lines
	 -> tail -5 file1                                                      : //      //     //      //
	 -> tail -f -5 file1.log                                               : continuously display lines
	 
	 = SED : Stream EDitor
	 -> sed -e s/is/are/ file9                                             : replace the first occurence in all lines in file9
	 -> sed -e s/is/are/g file9                                            : replace all occurence in all lines in file9
	 -> sed -e 1,3s/is/are/g file9                                         : //   //      //    // from line 1 to line 3
     -> sed -e 1,2s:is:are:g file9                                         : i can set : as seperator instead /
     -> sed -e 1,2s:is:are:g file9 > outputfile                            : set the result in new file 
	 -> sed 's/ /;/g' file3                                                : replace space between words with ';'

	 = AWK : used to extract and print specific content of the file
	 
	 -> awk -F: '{ print $1 }' /etc/passwd                                 : print the first column in the file   -F: mean the seperator is ':' 
     -> awk -F: '{ print $1 $7}' /etc/passwd                               : print the first and the seven column in the file   -F: mean the seperator is ':' 
     -> awk  '{ print $0 }' /etc/passwd                                    : print all file   

     = sort : sort file (look at the image)	 
    
	 = uniq : delete duplicate lines but the duplicate line must be one after other not faraway 
	 
     -> sort file1 file2 | uniq > file3                                    : delete duplicate lines (succesive lines for that we make sort before uniq)
	 -> sort -u file1 file2 > file3                                        : //      //     //    //
	 -> sort file3 | uniq -c                                               : to count number of duplicates
	 
	 
	 = paste : we can use paste to paste columns from two files we take one column from file1 and paste with column 3 from file2
	   -d : to specify the delimiter
	   -s : to past in horizental not in vertical fashion
	   
	 -> paste -d ';' file3 file4                                            : past the content of the two files with delimiter ';' between columns
	 
	 
	 = join : is like join in sql we have a common column between two files if i paste the two files i will have one column that be repeated but with join this column will be puted only one time
	          join searche the common field between the two files and make join accross this field
			  
	 = split : is used to split a file into equal size segments for easier viewing and manipulation (show image)	

     = regular expressions : used to matching a specific pattern
	 = grep : is used as a primary text searching tool (look at image)
	 = strings : is used to extract all printable charachter strings found in file or files
	 -> strings book1.xls | grep my_string                       : select all strings from file book1.xls then filter by grep
	 
	 = TR : is used to translate specified charachters into other charachters or to delete them
	 -> cat file1 | tr a-z A-Z                                   : replace lower case letters by upper case letters in file1
	 
	 = tee : take the output from any command and while sending to the standard output it also saves it in a file
	 -> ls -l | tee out1                                         : save the result of ls in a file and the result will be displayed in the console
	 -> ls -l > out2                                             : this command will send the output directly to the file without printing it in the console
	 
	 = wc : word count it counts the number of lines and words and charachters in a file or in list of files
	 -> wc -l file1                                              : number of lines
	 -> wc -c file1                                              : number of charachters
     -> wc -w file1                                              : number of words

     = cut : is used for manipulating column based files and is designed to extract specific columns, the default column seperator is the tab charachter	 
	 
	 
# Network Operations
    
	 = DNS
     -> hostname                                                 : display the host name assigned to 127.0.0.1
	 -> host ctim                                                : display assigned address to name ctim (this mapping exist in /etc/hosts)
	 -> host google.fr                                           : display the address of google.fr
	 -> nslookup google.fr                                       : //   //       //     //       // with more details
	 -> dig google.fr                                            : //    //       //      //     //   //        //  //
	 
	 = network configuration files path : /etc/network
	 -> sudo lsof -i:80                                          : display running service in port 80
	 -> ip -s link show                                          : display network interfaces 
	 -> ifconfig                                                 : //    //     //   //     //
	 -> ip address  show                                         : //   //      //    //    //
     -> ip route show                                            : dipslay routing informations
	 -> ip --brief addr show                                     : display all interfaces
	 -> ping adress
	 -> route -n                                                 : display routing table
     -> route add -net address                                   : add static route
     -> ip route add                                             : //      //     //
     -> route del -net address                                   : delete static route
     -> ip route del                                             : //     //     //   //	
     -> ethtool ens33                                            : show interface and details
     -> netstat -r	                                             : display routing table
	 -> sudo nmap -sP 10.71.1.52
	 -> wget                                                     : downoald files and large files
	 -> curl -o saved.htmt https://google.fr                     : beside the download we want to obtain informations about url such as source code being used : in this example will downoald page and saved it in saved.html
     -> ssh -l someone some_system                               : to connect as ssh to remote system or local another user
	 -> ssh someone@some_system                                  : // ///             //             //              //
	 -> scp -r /home/student   172.1.50.52:/tmp    (look at image): copy files between to hosts in the network securely it uses ssh protocol to transfer data
	 -> ssh ctim@10.71.1.52                                      : ctim = user on remote machine  10.71.1.52 : address of remote machine  


     -> curl -4 icanhazip.com                                    : give the public address ip



    
# unzip

    -> unrar x gmaoF0120.rar

    	 
	 
	 
	 
	 
